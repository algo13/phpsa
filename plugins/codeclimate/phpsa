#!/usr/bin/env php
<?php
/*
 * @author Patsura Dmitry http://github.com/ovr <talk@dmtry.me>
 */

ini_set('memory_limit', '512M');

$autoloadPath = dirname(__DIR__) . '/../vendor/autoload.php';;
if (!file_exists($autoloadPath)) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
    die(1);
} elseif (!is_readable($autoloadPath)) {
    fwrite(
        STDERR,
        'Cannot read autoload.php, path: ' . $autoloadPath
    );
    die(1);
}

include_once $autoloadPath;

if (!ini_get('date.timezone')) {
    ini_set('date.timezone', 'UTC');
}

if (extension_loaded('xdebug')) {
    ini_set('xdebug.max_nesting_level', 3000);
}

$console = new \PHPSA\Application();

try {
    $command = $console->get('check');
    $command->run(
        new \Symfony\Component\Console\Input\ArrayInput([]),
        new \Symfony\Component\Console\Output\NullOutput()
    );
} catch (\Throwable $e) {
    echo $e->getMessage();
    die(1);
}

$issues = $console->getIssuesCollector()->getIssues();
if ($issues) {
    foreach ($issues as $issue) {
        echo json_encode($issue->toArray(), JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE) . chr(0);
    }
}
